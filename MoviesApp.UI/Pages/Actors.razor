@page "/Actors"
@inject IActorService ActorService
@inject NavigationManager NavigationManager

<PageTitle>Actors</PageTitle>

<h3>Actors</h3>

<EditForm Model="actor" OnSubmit="HandleSubmit">
    <div class="row">
         <div class="col-md-4">
        <label for="Name">Actor Name</label>
        <InputText id="Name" @bind-Value="actor.Name" class="form-control"></InputText>
        </div>
         <div class="col-md-4">
        <label for="Surname">Actor Surname</label>
        <InputText id="Surname" @bind-Value="actor.Surname" class="form-control"></InputText>
        </div>
        <div class="col-md-4">
        <br />
    <button type="submit" class="btn btn-primary form-check-inline">Submit</button>
    </div>
    </div>
   
  
</EditForm>

<br/>


<table class="table">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var actor in ActorService.actors)
        {
            <tr>
                <td>@actor.Name</td>
                <td>@actor.Surname</td>
                <td>
                   @* <button class="btn btn-primary" @onclick="(() => ShowHero(hero.Id))"><i class="oi oi-pencil"></i></button>*@
                </td>
            </tr>
        }
    </tbody>
</table>


@code {
      Actor actor = new Actor();
    protected override async Task OnInitializedAsync()
    {
        await ActorService.GetActors();
    }

    async Task HandleSubmit()
    {
           // await ComicService.CreateComic(comic);
    }
}
