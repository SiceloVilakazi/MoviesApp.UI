@page "/Actors"
@inject IActorService ActorService
@inject IActorUpdateService UpdateService
@inject NavigationManager NavigationManager

<PageTitle>Actors</PageTitle>

<h3>Actors</h3>

<br />
<button class="btn btn-primary" @onclick="CreateNewActor">Create New Actor</button>
<br />
<br />


<table class="table">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var actor in ActorService.actors)
        {
            <tr>
                <td>@actor.Name</td>
                <td>@actor.Surname</td>
                <td>
                  <button class="btn btn-danger" @onclick="(() => RemoveActor(actor.Id))"><i class="oi oi-trash"></i></button>
                  <button class="btn btn-success" @onclick="(() => EditActor(actor.Id))"><i class="oi oi-pencil"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    protected override async Task OnInitializedAsync()
      {
          await ActorService.GetActors();
      }
    void CreateNewActor()
       {
           NavigationManager.NavigateTo("/UpdateActor");
       }

    void EditActor(int id)
       {
           NavigationManager.NavigateTo($"UpdateActor/{id}");
       }

    async Task RemoveActor(int id)
       {
           await UpdateService.DeleteActor(id);
       }
   
}
